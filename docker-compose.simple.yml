version: '3.8'

services:
  # バックエンドAPI（SQLite使用で外部データベース不要）
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: facescore-backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=file:./dev.db
      - CORS_ORIGIN=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173
    env_file:
      - ./backend/.env.dev
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
      - ./backend/prisma:/app/prisma
    ports:
      - "3001:3001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: facescore-frontend
    env_file:
      - ./frontend/.env.dev
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx リバースプロキシ（HTTPS対応・オプション）
  nginx:
    image: nginx:alpine
    container_name: facescore-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# 設定なしで動作（外部サービス不要）
networks:
  default:
    driver: bridge